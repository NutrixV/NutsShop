name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: nutsshop_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: nutsshop_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, pgsql
        coverage: xdebug
    
    - name: Copy backend env file
      run: cp .env.example backend/.env
    
    - name: Install Composer dependencies
      working-directory: ./backend
      run: composer install --prefer-dist --no-interaction
    
    - name: Generate app key
      working-directory: ./backend
      run: php artisan key:generate
    
    - name: Run migrations
      working-directory: ./backend
      run: php artisan migrate --seed
      env:
        DB_CONNECTION: pgsql
        DB_HOST: localhost
        DB_PORT: 5432
        DB_DATABASE: nutsshop_test
        DB_USERNAME: postgres
        DB_PASSWORD: nutsshop_password
    
    - name: Run backend tests
      working-directory: ./backend
      run: vendor/bin/pest --coverage
      env:
        DB_CONNECTION: pgsql
        DB_HOST: localhost
        DB_PORT: 5432
        DB_DATABASE: nutsshop_test
        DB_USERNAME: postgres
        DB_PASSWORD: nutsshop_password
  
  frontend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Run linters
      working-directory: ./frontend
      run: npm run lint
      
    - name: Run build
      working-directory: ./frontend
      run: npm run build 